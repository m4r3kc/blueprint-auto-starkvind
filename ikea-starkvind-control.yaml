blueprint:
  name: Manualne sterowanie oczyszczaczem powietrza (wieloma)
  description: |
    <br>
    <b>📘Ten Blueprint włącza oczyszczacze powietrza w trybie manualnym z określoną mocą, gdy poziom PM2.5 przekracza określony próg.</b>
    <br><br>
    📅 <b>Przełączniki, encje, obszary</b>: Oczyszczacze powietrza są uruchamiane w trybie manualnym z określoną mocą, gdy poziom PM2.5 przekroczy ustawiony próg.<br>
    ⏰ <b>Automatyczne wyłączanie</b>: Oczyszczacze powietrza można nadal wyłączyć ręcznie.
  domain: automation
  input:
    manual_toggle:
      name: Przełącznik lub encja
      description: Przełącznik lub encja do ręcznego włączania oczyszczacza powietrza.
      selector:
        entity:
          domain:
            - input_boolean
            - switch
            - light
            - fan
            - binary_sensor
    manual_toggle_state:
      name: Stan przełącznika lub encji
      description: Stan, w którym automatyzacja jest wyzwalana (włączony lub wyłączony)
      default: "on"
      selector:
        select:
          options:
            - "on"
            - "off"
    pm2_5_sensor:
      name: Czujnik PM2.5
      description: Czujnik PM2.5 dla oczyszczaczy powietrza
      selector:
        entity:
          domain: sensor
    ppm_threshold:
      name: Próg PM2.5
      description: Próg (PPM) do włączania oczyszczaczy powietrza
      default: 50
      selector:
        number:
          min: 1
          max: 120
          step: 1
    fan_power:
      name: Moc wentylatora
      description: Procentowa moc wentylatora w trybie manualnym
      default: 60
      selector:
        number:
          min: 10
          max: 100
          step: 10
    fan_entities:
      name: Oczyszczacze powietrza
      description: Encje, obszary lub urządzenia wybranych oczyszczaczy powietrza
      selector:
        target:
          entity:
            domain: fan

trigger:
  - platform: state
    entity_id: !input pm2_5_sensor
    id: automanual

condition: []

action:
  - choose:
      # Automatyczne sterowanie oparte na PM2.5
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'automanual' }}"
        sequence:
          - delay:
              minutes: 3  # Poczekaj 3 minuty, aby ustalić rzeczywistą wartość PM2.5
          - condition: numeric_state
            entity_id: !input pm2_5_sensor
            above: !input ppm_threshold  # Sprawdź, czy wartość PM2.5 jest powyżej progu
          - service: fan.turn_on
            target: !input fan_entities
          - service: fan.set_percentage
            target: !input fan_entities
            data:
              percentage: !input fan_power

mode: single
